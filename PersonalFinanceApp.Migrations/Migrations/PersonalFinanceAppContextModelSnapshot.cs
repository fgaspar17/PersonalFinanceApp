// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalFinanceApp.Data;

#nullable disable

namespace PersonalFinanceApp.Migrations.Migrations
{
    [DbContext(typeof(PersonalFinanceAppContext))]
    partial class PersonalFinanceAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("PersonalFinanceApp.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PersonalFinanceApp.Data.Models.MoneyMovement", b =>
                {
                    b.Property<long>("MoneyMovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovementTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MoneyMovementId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.HasIndex("MovementTypeId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("MoneyMovements");
                });

            modelBuilder.Entity("PersonalFinanceApp.Data.Models.MovementType", b =>
                {
                    b.Property<int>("MovementTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("MovementTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MovementTypes");
                });

            modelBuilder.Entity("PersonalFinanceApp.Data.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("PaymentMethodId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("PersonalFinanceApp.Data.Models.MoneyMovement", b =>
                {
                    b.HasOne("PersonalFinanceApp.Data.Models.Category", "Category")
                        .WithMany("MoneyMovements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalFinanceApp.Data.Models.MovementType", "MovementType")
                        .WithMany("MoneyMovements")
                        .HasForeignKey("MovementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalFinanceApp.Data.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("MoneyMovements")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("MovementType");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("PersonalFinanceApp.Data.Models.Category", b =>
                {
                    b.Navigation("MoneyMovements");
                });

            modelBuilder.Entity("PersonalFinanceApp.Data.Models.MovementType", b =>
                {
                    b.Navigation("MoneyMovements");
                });

            modelBuilder.Entity("PersonalFinanceApp.Data.Models.PaymentMethod", b =>
                {
                    b.Navigation("MoneyMovements");
                });
#pragma warning restore 612, 618
        }
    }
}
